mport numpy as np
import pandas as pd
from matplotlib import pyplot as plt
from scipy import signal
import math
from gnuradio import gr
from gnuradio import audio
from gnuradio import blocks
from gnuradio import analog
from gnuradio import filter
from gnuradio.filter import firdes
import osmosdr

# Set up the software defined radio
sdr = osmosdr.source( args="numchan=1" )
sdr.set_sample_rate( 5e6 )
sdr.set_center_freq( 434e6, 0 )
sdr.set_freq_corr( 0, 0 )
sdr.set_dc_offset_mode( 0, 0 )
sdr.set_iq_balance_mode( 0, 0 )
sdr.set_bandwidth( 0, 0 )

# Create a Python list of Russian or Arabic HAM radio frequencies
russian_arabic_frequencies = [434e6, 439e6, 444e6, 449e6, 454e6]

# Create a list of the frequencies to be used in the software-defined radio
freq_list = []
for freq in russian_arabic_frequencies:
    freq_list.append(freq)

# Create a low pass filter to filter out noise
low_pass_filter = filter.firdes.low_pass(1.0, 5e6, 4e3, 100,
                                        firdes.WIN_HAMMING, 6.76)

# Connect the filter to the software-defined radio
filtered_sdr = filter.freq_xlating_fir_filter_ccc(1, low_pass_filter, 0, 5e6)
filtered_sdr.set_center_freq(0)

# Connect the filter to the audio sink
audio_sink = audio.sink(32000, "", True)

# Connect the filter to the demodulator
demod = analog.quadrature_demod_cf(1)

# Connect the demodulator to the audio sink
blocks_connector = blocks.multiply_const_vff((1.0/3.14, ))

# Connect the demodulator to the audio sink
blocks.connect(filtered_sdr, demod, blocks_connector, audio_sink)

# Set up the geolocation of the HAM radio transmitter
latitude = 47.6
longitude = -122.3

# Create a dataframe to store the Russian and Arabic transmissions
data = {
    'Frequency':freq_list,
    'Latitude': latitude,
    'Longitude': longitude
}
df = pd.DataFrame(data)

# Start the flow graph
gr.run()

# Save the dataframe to a .pdf file
df.to_pdf('Russian_Arabic_Transmissions.pdf')